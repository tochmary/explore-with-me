DROP TABLE IF EXISTS categories, users;

--Таблица категорий
CREATE TABLE IF NOT EXISTS categories
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT categories_pk PRIMARY KEY (id)
);

--Таблица пользователей
CREATE TABLE IF NOT EXISTS users
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT users_pk PRIMARY KEY (id),
    CONSTRAINT users_email_uq UNIQUE (email)
);

--Таблица событий
/*
 * Полная информация о событии:
 * id - Идентификатор;
 * annotation - Краткое описание;
 * category - Категория;
 --* confirmedRequests - Количество одобренных заявок на участие в данном событии;
 * createdOn - Дата и время создания события (в формате \"yyyy-MM-dd HH:mm:ss\";
 * description - Полное описание события;
 * eventDate - Дата и время на которые намечено событие (в формате \"yyyy-MM-dd HH:mm:ss\");
 * initiator - Пользователь (краткая информация);
 * location - Широта и долгота места проведения события;
 * paid - Нужно ли оплачивать участие;
 * participantLimit - Ограничение на количество участников. Значение 0 - означает отсутствие ограничения;
 --* publishedOn - Дата и время публикации события (в формате \"yyyy-MM-dd HH:mm:ss\");
 * requestModeration - Нужна ли пре-модерация заявок на участие;
 --* state - Список состояний жизненного цикла события;
 * title - Заголовок;
 --* views - Количество просмотрев события;*/
CREATE TABLE IF NOT EXISTS events
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(120) NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    description VARCHAR(7000) NOT NULL,
    category_id BIGINT NOT NULL,
    initiator_id BIGINT NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    location_lat FLOAT NOT NULL,
    location_lon FLOAT NOT NULL,
    paid BOOLEAN NOT NULL,
    participant_limit BIGINT DEFAULT AS 0,
    request_moderation BOOLEAN DEFAULT AS TRUE,
    CONSTRAINT events_pk PRIMARY KEY (id),
    CONSTRAINT events_category_id_fk FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT events_users_id_fk FOREIGN KEY (initiator_id) REFERENCES users (id)
    );